{"version":3,"sources":["AddButton/AddButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotefulError.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","AddFolder/AddFolder.js","AddNote/ValidationError.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavAddButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","react_router_dom","to","concat","folderId","filter","countNotesForFolder","name","Link","type","Component","contextType","ApiContext","NotefulError","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","NotePageNav","match","params","findFolder","NotefulError_NotefulError","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","NotefulForm","assign","action","AddFolder","handleFolderSubmit","target","value","setState","options","body","JSON","stringify","Error","data","addNewFolder","err","message","NotefulForm_NotefulForm","onSubmit","htmlFor","withRouter","ValidationError","Fragment","AddNote","handleNoteSubmit","_e$target","selectedFolder","Date","now","addNewNote","nameValid","formValid","validationMessage","_this2","validateName","fieldValue","fieldErrors","trim","_this3","onChange","verifyNameLength","nameVaild","disabled","App","toConsumableArray","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","react_router","exact","component","render","src_AddFolder_AddFolder","src_AddNote_AddNote","Provider","renderNavRoutes","renderMainRoutes","ReactDOM","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.4225659f.chunk.js","sourcesContent":["import React from 'react'\nimport './AddButton.css'\n\nexport default function NavAddButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavAddButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavAddButton.defaultProps ={\n  tag: 'a',\n}\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {}\n})","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport AddButton from '../AddButton/AddButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <AddButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n           Add Folder\n            <br />\n          </AddButton>\n        </div>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\n\nexport default class NotefulError extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n      }\n    render() {\n      if (this.state.hasError) {      \n        return (\n          <h2>There was an error.</h2>\n        );\n      }\n      return this.props.children;\n    }\n}\n","import React from 'react';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport { findNote, findFolder } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n      <NotefulError>\n        <AddButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <br />\n          Back\n        </AddButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n        </NotefulError>\n      </div>\n    )\n  }\n}","export default {\n    API_ENDPOINT: 'http://localhost:9090'\n  }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nNote.propTypes = {\n  note: PropTypes.objectOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    modified: PropTypes.number.isRequired,\n  })) \n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Note from '../Note/Note';\nimport AddButton from '../AddButton/AddButton';\nimport ApiContext from '../ApiContext';\nimport { getNotesForFolder } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <NotefulError>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <AddButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n          Add Note\n            <br />\n          </AddButton>\n        </div>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n","import React from 'react';\nimport Note from '../Note/Note';\nimport ApiContext from '../ApiContext';\nimport { findNote } from '../notes-helpers';\nimport NotefulError from '../NotefulError';\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <NotefulError>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n        </NotefulError>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport './NotefulForm.css';\nimport PropTypes from 'prop-types';\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n\nNotefulForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport './AddFolder.css';\nimport { withRouter } from 'react-router-dom';\n\nclass AddFolder extends Component {\n\n  state = {\n    error: null,\n  };\n\n  handleFolderSubmit = e => {\n    e.preventDefault()\n    const {name} = e.target\n    const folder = {\n      name: name.value\n    }\n    const url = 'http://localhost:9090/folders'\n    this.setState({ error:null })\n    const options = {\n    method: 'POST',\n    headers: {\n        'content-type': 'application/json'\n    },\n    body: JSON.stringify(folder),\n}\nfetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n      .then(data => {     \n        name.value = ''\n        this.props.addNewFolder(data);\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        this.setState({\n          error: err.message\n        });\n      })\n    }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <NotefulError>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleFolderSubmit}>\n          <div className='field'>\n            <label htmlFor='name-input'>\n              Name\n            </label>\n            <input type='text' id='name' name='name'/>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  addNewFolder: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })) \n};\n\nexport default withRouter(AddFolder);","import React from 'react';\n\nexport default function ValidationError(props) {\n  if(props.hasError) {\n    return (\n      <div className=\"error\">{props.message}</div>\n    );\n  }\n\n  return <></>\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ValidationError from './ValidationError';\nimport NotefulError from '../NotefulError';\nimport PropTypes from 'prop-types';\nimport './AddNote.css'\n\nclass AddNote extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      nameValid: false,\n      formValid: false,\n      validationMessage: {\n        name: ''\n      }\n    }\n  }\n\n  verifyNameLength(name) {\n    this.setState({name}, () => {this.validateName(name)});\n  }\n\n  handleNoteSubmit = e => {\n    e.preventDefault();\n    const { name, selectedFolder, content } = e.target;\n    const note = {\n      name: name.value,\n      folderId: selectedFolder.value,\n      content: content.value,\n      modified: Date.now()\n    }\n    const url = 'http://localhost:9090/notes';\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    this.setState({ error: null })\n    fetch(url, options)\n      .then(res => {\n        if(!res.ok) {\n          throw new Error('Something went wrong, please try again later');\n        }\n        return res.json();\n      })\n    .then(data => {\n      this.props.addNewNote(data)\n      this.props.history.push('/')\n    })\n    .catch(err => {\n      this.setState({\n        error: err.message\n      });\n    });\n  }\n\n  validateName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessage};\n    let hasError = false;\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.name = 'A note name is required.';\n      hasError = true;\n    } else {\n      fieldErrors.name = '';\n      hasError = false;\n    }\n    this.setState({\n      validationMessage: fieldErrors,\n      nameValid: !hasError\n    }, this.formValid );\n  }\nformValid() {\n  this.setState({\n      formValid: this.state.nameValid\n  });\n}\n\n  render() {\n    const folders = this.props.folders\n    return (\n      <section className='AddNote'>\n        <NotefulError>\n          <h2>Create a note</h2>\n          <NotefulForm onSubmit={this.handleNoteSubmit}>\n            <div className='field'>\n              <label htmlFor='note-name-input'>\n                Name\n              </label>\n              <input type='text' id='name' name='name' onChange={e => this.verifyNameLength(e.target.value)}/>\n              <ValidationError hasError={!this.state.nameVaild} message={this.state.validationMessage.name}/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-content-input'>\n                Content\n              </label>\n              <textarea id='content' name='content'/>\n            </div>\n            <div className='field'>\n              <label htmlFor='note-folder-select'>\n                Folder\n              </label>\n              <select id='selectedFolder' name='selectedFolder'>\n                <option value={null}>...</option>\n                {folders.map(folder =>\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                )}\n              </select>\n            </div>\n            <div className='buttons'>\n              <button type='submit' disabled={!this.state.formValid} >\n                Add note\n              </button>\n            </div>\n          </NotefulForm>\n        </NotefulError>\n      </section>\n    )\n  }\n}\n\nAddNote.propTypes = {\n  addNewNote: PropTypes.func.isRequired,\n  folders: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })) \n};\n\nexport default withRouter(AddNote);","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css'\n\nclass App extends Component {\n\n    state = {\n        notes: [],\n        folders: [],\n    };\n\n    addNewFolder = folder => {\n        this.setState({ \n            folders: [ ...this.state.folders, folder \n        ]})\n    }\n\n    addNewNote = (note) => {\n        this.setState({ \n            notes: [ ...this.state.notes, note\n        ]});\n    };\n \n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({notes, folders});\n            })\n            .catch(error => {\n                console.error({error});\n            });\n    };\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n\n                <Route path='/add-folder' \n                    render={(history) =>\n                    <AddFolder\n                        addNewFolder={this.addNewFolder}\n                    />}\n                />\n               <Route path='/add-note'\n                render={(history) =>\n                    <AddNote\n                        addNewNote = {this.addNewNote}\n                        folders ={this.state.folders} \n                    /> }\n                />\n            </>\n        );\n    }\n\n    render() {\n            const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote\n        };\n        \n        return (\n            <ApiContext.Provider value={value}>\n                <div className=\"App\">\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                    <header className=\"App__header\">\n                        <h1>\n                            <Link to=\"/\">Noteful</Link>{' '}\n                        </h1>\n                    </header>\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\n                </div>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default withRouter(App)\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import {\n//   faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n// } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\n// import 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\n// library.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)"],"sourceRoot":""}